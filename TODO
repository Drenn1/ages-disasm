* Investigate gfx_navi_ambi.bin (the only gfx file whose size isn't a multiple of 16)
    * In general, make sure gfx decompression is 100% correct.
    * Getting recompression working 100% would be ideal to verify that...

* Scripts in bank $15 could change unreliably when relocated, due to the variance on where
  "jump" commands go to (they either jump locally or to bank $c). Figure out how to fix this.
* Fix capitalization for variables named based on their addresses (inconsistent)
* Investigate compression:
    - Each room layout group ("plane") has $4000 bytes for its data (pointers use 14
      bits). Uncompressed small rooms can use up to $5000 bytes. Investigate further.
        - Large layout groups should have $10000 bytes.
* Interactions:
    - Should be possible to have interaction ids greater than $ef, not supported yet
      though
* WLA:
    - Add an option to optimize all "ld a,($ffxx)" opcodes to "ldh a,($xx)"
* Text:
    - Have dumpText.py give names to indices that are skipped over with "next" commands


* QOL stuff (in a different branch):
    * Make chest items always have the correct spawn mode
    * Allow moving down a screen in sidescrolling areas
    * Have a completely separate tileset for each area (like ZOLE)
    * VWF:
        * Fix spacing in file select, farore's memory
        * Scroll text smoothly in the inventory screen
        * Calculate newlines within the code?
    * Bugfixes:
    	* "calculateRoomEdge" function flawed?
        * The "_checkPositionValidForEnemySpawn" is inconsistent? (see note)
        * Fix the "_mapleCheckLinkCanDropItem" function (faulty checks for whether Link
          has obtained bombs, seeds; certain seeds never drop from maple).
        * Tweak seed tree refills so that they don't reset when you visit the tree screen.
          (Questionable if this is a bug)
    * Game enhancements:
        * Allow multiple "bullets" with seed shooter
